{"ast":null,"code":"var _jsxFileName = \"/var/www/html/new-origin/frontend/src/components/Faq/Faq.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Container from '../Container/Container';\nimport PropTypes from 'prop-types';\nimport styles from './Faq.module.scss';\nexport default class Faq extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      faq: [],\n      faqIsLoaded: false\n    };\n\n    this.pushFaqItem = faqItems => {\n      let faq = [];\n      let faqItemsCount = 1;\n      faqItems.map(faqItem => {\n        // If it first item - isActive = true\n        faqItem.isActive = faqItemsCount === 1 ? true : false;\n        faq.push(faqItem);\n        faqItemsCount++;\n        return null;\n      });\n      this.setState({\n        faq: faq,\n        faqIsLoaded: true\n      });\n    };\n\n    this.getQuestionsList = () => {\n      const standartQuestionClass = styles.Faq__questionItem;\n      const activeQuestionClass = standartQuestionClass + ' ' + styles.Faq__activeQuestionItem;\n      if (this.state.faqIsLoaded) this.state.faq.map((faqItem, key) => React.createElement(\"div\", {\n        key: key,\n        className: faqItem.isActive ? activeQuestionClass : standartQuestionClass,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: styles.Faq__questionIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: styles.Faq__questionText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, faqItem.title.rendered)));\n      return 'Loading...';\n    };\n\n    this.getAnswersList = () => {\n      if (this.state.faqIsLoaded) {}\n    };\n  }\n\n  componentDidMount() {\n    // Get FAQ items from server\n    axios(\"/wp-json/wp/v2/faq\").then(res => this.pushFaqItem(res.data)).catch(err => console.log(err));\n  } // Push fetched data to state\n\n\n  render() {\n    const title = this.props.title;\n    return React.createElement(\"section\", {\n      className: styles.Faq,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.Faq__rightBg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.Faq__titleWr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: styles.Faq__title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, title)), React.createElement(\"div\", {\n      className: styles.Faq__contentWr,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: styles.Faq__answers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Answers\"), React.createElement(\"div\", {\n      className: styles.Faq__questions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.getQuestionsList()))));\n  }\n\n}\nFaq.propTypes = {\n  title: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/var/www/html/new-origin/frontend/src/components/Faq/Faq.js"],"names":["React","Component","axios","Container","PropTypes","styles","Faq","state","faq","faqIsLoaded","pushFaqItem","faqItems","faqItemsCount","map","faqItem","isActive","push","setState","getQuestionsList","standartQuestionClass","Faq__questionItem","activeQuestionClass","Faq__activeQuestionItem","key","Faq__questionIcon","Faq__questionText","title","rendered","getAnswersList","componentDidMount","then","res","data","catch","err","console","log","render","props","Faq__rightBg","Faq__titleWr","Faq__title","Faq__contentWr","Faq__answers","Faq__questions","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport Container from '../Container/Container'\nimport PropTypes from 'prop-types'\nimport styles from './Faq.module.scss'\n\nexport default class Faq extends Component {\n\n  state = {\n    faq: [],\n    faqIsLoaded: false\n  }\n\n  static propTypes = {\n    title: PropTypes.string.isRequired\n  }\n\n  componentDidMount() {\n    // Get FAQ items from server\n    axios(`/wp-json/wp/v2/faq`)\n      .then(res => this.pushFaqItem(res.data))\n      .catch(err => console.log(err))\n  }\n\n  // Push fetched data to state\n  pushFaqItem = faqItems => {\n    let faq = []\n    let faqItemsCount = 1\n\n    faqItems.map(faqItem => {\n      // If it first item - isActive = true\n      faqItem.isActive = faqItemsCount === 1 ? true : false\n      faq.push(faqItem)\n      faqItemsCount++\n\n      return null\n    })\n\n    this.setState({\n      faq: faq,\n      faqIsLoaded: true\n    })\n  }\n\n  // Return questions list\n  getQuestionsList = () => {\n    const standartQuestionClass = styles.Faq__questionItem\n    const activeQuestionClass = standartQuestionClass + ' ' + styles.Faq__activeQuestionItem\n\n    if (this.state.faqIsLoaded) (\n      this.state.faq.map((faqItem, key) => (\n          <div\n            key={key}\n            className={faqItem.isActive ? activeQuestionClass : standartQuestionClass}\n          >\n            <div className={styles.Faq__questionIcon}>\n              <span></span>\n            </div>\n            <div className={styles.Faq__questionText}>{faqItem.title.rendered}</div>\n          </div>\n        )\n      )\n    )\n    \n    return 'Loading...'\n  }\n\n  // Return answers list\n  getAnswersList = () => {\n\n    if (this.state.faqIsLoaded) {\n\n    }\n  }\n\n  render() {\n\n    const { title } = this.props\n\n    return (\n      <section className={styles.Faq}>\n        <div className={styles.Faq__rightBg}></div>\n        <Container>\n          <div className={styles.Faq__titleWr}>\n            <h2 className={styles.Faq__title}>{title}</h2>\n          </div>\n          <div className={styles.Faq__contentWr}>\n            <div className={styles.Faq__answers}>\n              Answers\n            </div>\n            <div className={styles.Faq__questions}>\n              { this.getQuestionsList() }\n            </div>\n          </div>\n        </Container>\n      </section>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}