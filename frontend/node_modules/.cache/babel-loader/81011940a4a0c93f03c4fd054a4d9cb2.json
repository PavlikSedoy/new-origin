{"ast":null,"code":"import { TimelineMax } from \"gsap\"; // import GSAP from 'gsap-react-plugin'\n\nconst getDefaultTimeline = (node, delay) => {\n  const timeline = new TimelineMax({\n    paused: true\n  }); // const content = node.querySelector('.transition-container')\n\n  timeline.from(node, 1, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }); // .from(node, 0.3, { display: 'none', autoAlpha: 0, delay, ease: Power4.easeIn })\n  // .from(content, 0.15, { autoAlpha: 0, y: 25, ease: Power4.easeInOut })\n\n  return timeline;\n};\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new TimelineMax({\n    paused: true\n  }); // const content = node.querySelector('.transition-container')\n\n  timeline.from(node, 1, {\n    display: 'none',\n    autoAlpha: 0,\n    delay\n  }); // .from(node, 0.3, { display: 'none', x: 300, autoAlpha: 0, delay, ease: Power4.easeIn })\n  // .from(content, 0.5, { autoAlpha: 0, y: 125, ease: Power4.easeInOut })\n\n  return timeline;\n};\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5;\n  let timeline;\n  if (pathname === '/') timeline = getHomeTimeline(node, delay);else timeline = getDefaultTimeline(node, delay); // window\n  // .loadPromise\n  // .then(() => requestAnimationFrame(() => timeline.play()))\n  // .then(timeline.play())\n\n  timeline.play();\n};\nexport const exit = node => {\n  const timeline = new TimelineMax({\n    paused: true\n  });\n  timeline.to(node, 1, {\n    display: 'none',\n    position: 'absolute',\n    y: 300\n  }); // timeline.to(node, 0.15, { autoAlpha: 0, ease: Power4.easeOut });\n\n  timeline.play();\n};","map":{"version":3,"sources":["/var/www/html/new-origin/frontend/src/timelines/index.js"],"names":["TimelineMax","getDefaultTimeline","node","delay","timeline","paused","from","display","autoAlpha","getHomeTimeline","play","pathname","appears","exit","to","position","y"],"mappings":"AAAA,SAASA,WAAT,QAA4B,MAA5B,C,CACA;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC1C,QAAMC,QAAQ,GAAG,IAAIJ,WAAJ,CAAgB;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAhB,CAAjB,CAD0C,CAE1C;;AAEAD,EAAAA,QAAQ,CACLE,IADH,CACQJ,IADR,EACc,CADd,EACiB;AAAEK,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,SAAS,EAAE,CAA9B;AAAiCL,IAAAA;AAAjC,GADjB,EAJ0C,CAMxC;AACA;;AAEF,SAAOC,QAAP;AACD,CAVD;;AAYA,MAAMK,eAAe,GAAG,CAACP,IAAD,EAAOC,KAAP,KAAiB;AACvC,QAAMC,QAAQ,GAAG,IAAIJ,WAAJ,CAAgB;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAhB,CAAjB,CADuC,CAEvC;;AAEAD,EAAAA,QAAQ,CACLE,IADH,CACQJ,IADR,EACc,CADd,EACiB;AAAEK,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,SAAS,EAAE,CAA9B;AAAiCL,IAAAA;AAAjC,GADjB,EAJuC,CAMrC;AACA;;AAEF,SAAOC,QAAP;AACD,CAVD;;AAYA,OAAO,MAAMM,IAAI,GAAG,CAACC,QAAD,EAAWT,IAAX,EAAiBU,OAAjB,KAA6B;AAC/C,QAAMT,KAAK,GAAGS,OAAO,GAAG,CAAH,GAAO,GAA5B;AACA,MAAIR,QAAJ;AAEA,MAAIO,QAAQ,KAAK,GAAjB,EACEP,QAAQ,GAAGK,eAAe,CAACP,IAAD,EAAOC,KAAP,CAA1B,CADF,KAGEC,QAAQ,GAAGH,kBAAkB,CAACC,IAAD,EAAOC,KAAP,CAA7B,CAP6C,CAS/C;AACE;AACA;AACA;;AACAC,EAAAA,QAAQ,CAACM,IAAT;AACH,CAdM;AAgBP,OAAO,MAAMG,IAAI,GAAIX,IAAD,IAAU;AAC5B,QAAME,QAAQ,GAAG,IAAIJ,WAAJ,CAAgB;AAAEK,IAAAA,MAAM,EAAE;AAAV,GAAhB,CAAjB;AAEAD,EAAAA,QAAQ,CAACU,EAAT,CAAYZ,IAAZ,EAAkB,CAAlB,EAAqB;AAAEK,IAAAA,OAAO,EAAE,MAAX;AAAmBQ,IAAAA,QAAQ,EAAE,UAA7B;AAAyCC,IAAAA,CAAC,EAAE;AAA5C,GAArB,EAH4B,CAI5B;;AACAZ,EAAAA,QAAQ,CAACM,IAAT;AACD,CANM","sourcesContent":["import { TimelineMax } from \"gsap\";\n// import GSAP from 'gsap-react-plugin'\n\nconst getDefaultTimeline = (node, delay) => {\n  const timeline = new TimelineMax({ paused: true })\n  // const content = node.querySelector('.transition-container')\n\n  timeline\n    .from(node, 1, { display: 'none', autoAlpha: 0, delay })\n    // .from(node, 0.3, { display: 'none', autoAlpha: 0, delay, ease: Power4.easeIn })\n    // .from(content, 0.15, { autoAlpha: 0, y: 25, ease: Power4.easeInOut })\n\n  return timeline\n}\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new TimelineMax({ paused: true })\n  // const content = node.querySelector('.transition-container')\n\n  timeline\n    .from(node, 1, { display: 'none', autoAlpha: 0, delay })\n    // .from(node, 0.3, { display: 'none', x: 300, autoAlpha: 0, delay, ease: Power4.easeIn })\n    // .from(content, 0.5, { autoAlpha: 0, y: 125, ease: Power4.easeInOut })\n\n  return timeline\n}\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5\n  let timeline\n\n  if (pathname === '/')\n    timeline = getHomeTimeline(node, delay)\n  else\n    timeline = getDefaultTimeline(node, delay)\n\n  // window\n    // .loadPromise\n    // .then(() => requestAnimationFrame(() => timeline.play()))\n    // .then(timeline.play())\n    timeline.play();\n}\n\nexport const exit = (node) => {\n  const timeline = new TimelineMax({ paused: true });\n\n  timeline.to(node, 1, { display: 'none', position: 'absolute', y: 300 });\n  // timeline.to(node, 0.15, { autoAlpha: 0, ease: Power4.easeOut });\n  timeline.play();\n}"]},"metadata":{},"sourceType":"module"}